# Spring Boot Application Configuration - Example
# 이 파일을 복사하여 application.properties로 사용하세요

spring.application.name=book-api
server.port=8080

# Supabase PostgreSQL Database Configuration
# Transaction Pooler 설정 (Supabase의 Transaction pooler 사용)
# 실제 Supabase 프로젝트 정보로 변경하세요
spring.datasource.url=${SUPABASE_DB_URL:jdbc:postgresql://db.your-project-ref.supabase.co:6543/postgres?sslmode=require}
spring.datasource.username=${SUPABASE_DB_USER:postgres}
spring.datasource.password=${SUPABASE_DB_PASSWORD:your-password-here}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool 설정
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate 설정
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging 설정
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# CORS 설정
spring.web.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# JWT 설정
jwt.secret=${JWT_SECRET:your-jwt-secret-key-here}
jwt.expiration=${JWT_EXPIRATION:86400000}

# Swagger 설정
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html

# 환경별 설정 예시
# 개발 환경
# spring.profiles.active=dev
# spring.jpa.hibernate.ddl-auto=create-drop

# 운영 환경
# spring.profiles.active=prod
# spring.jpa.hibernate.ddl-auto=validate
# logging.level.org.hibernate.SQL=WARN
